from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, CallbackQueryHandler, filters, ContextTypes
from dotenv import load_dotenv
from telegram.error import Conflict
import time
import os

COMMANDS = [
    ("start", "Почати роботу з ботом"),
    ("clear", "Очистити чат"),
    ("restart", "Перезапустити бота"),
    ("stop", "Зупинити бота")
]

# Завантаження змінних з .env файлу
load_dotenv()

# Отримання токену
TOKEN = os.getenv('TELEGRAM_TOKEN')

# Структура даних для меню
MENU_DATA = {


# ЩО РОБИТИ ЯКЩО
    "what_to_do": {
    "title": "❓ ЩО РОБИТИ ЯКЩО ❓",
    "content": """<b>Що робити, якщо є підозра про булінг – алгоритм дій</b>

Алгоритм розроблено згідно з наказом МОН від 28.12.2019 №1646 і рекомендацій, підготованих за участі <a href="https://zakon.rada.gov.ua/laws/show/z0111-20#Text">освітнього омбудсмена</a>.

<b>Оберіть розділ алгоритму:</b>""",
    "sections": {
        "first_steps": {
            "title": "ПЕРШІ КРОКИ",
            "content": """<b>ПЕРШІ КРОКИ</b>

У випадках підозри чи виявлення булінгу важливо діяти швидко та послідовно. Своєчасне реагування допомагає захистити постраждалу дитину та запобігти подальшому розвитку конфлікту.

Нижче наведено покроковий алгоритм дій, розроблений згідно з офіційними рекомендаціями МОН України. Дотримання цих кроків допоможе забезпечити ефективне реагування на ситуацію булінгу в закладі освіти.

Оберіть конкретний крок для отримання детальної інформації:""",
            "steps": {
                "step1": {
                    "title": "Крок 1",
                    "content": """<b>Крок 1</b>

Необхідно повідомити директору школи про випадок булінгу або підозру щодо нього. Це можуть зробити всі учасники освітнього процесу: учні, батьки та педагоги.

Повідомлення мають прийматись усно або письмово, особисто або засобами електронної комунікації.

"Чому це важливо проговорити для вчителів? Тому що часто ми схильні менше приділяти уваги саме усним повідомленням або повідомленням в груповому чаті. Проте всі ці повідомлення від батьків і учнів необхідно вважати саме заявою про булінг", – зазначає Анна Овдієнко.

Проте вона радить звертатися письмово і казати про це батькам та учням: "У такому випадку є чітка заява – задокументована, з датою, з реєстраційним номером. У випадку, якщо щось буде зроблено неправильно або дій не буде вжито, письмова заява буде доказом для звернення в інші інстанції"."""
                },
                "step2": {
                    "title": "Крок 2",
                    "content": """<b>Крок 2</b>

Директор впродовж першої доби від отримання повідомлення має обов'язково повідомити про випадок:

• поліції;
• батькам учнів-учасників булінгу;
• службі у справах дітей для того, щоби з'ясувати причини випадку булінгу та усунути їх, а також для соціального захисту дітей, які стали сторонами булінгу;
• додатково – центру соціальної служби для сім'ї та молоді. Цей центр має оцінити потреби сторін булінгу, визначити методи соціальної роботи, визначити та потім надати соціальні послуги, забезпечити психологічну підтримку.

<b>Важливо:</b> Якщо трапився випадок, через який дитина потребує медичної допомоги, то директор обов'язково має викликати швидку."""
                },
                "step3": {
                    "title": "Крок 3",
                    "content": """<b>Крок 3</b>

Директор має скликати засідання комісії з розгляду випадку булінгу впродовж 3-х робочих днів із дня отримання заяви або повідомлення.

Комісія може розглядати заяву не більше 10-ти робочих днів із дня отримання заяви або повідомлення керівником закладу освіти."""
                }
            }
        },
        "committee": {
            "title": "КОМІСІЯ І ЗАСІДАННЯ",
            "content": """<b>КОМІСІЯ І ЗАСІДАННЯ</b>

Комісія має бути затверджена на початку навчального року. Постійний склад:

• голова (зазвичай це директор);
• педагогічні працівники;
• практичний психолог;
• соціальний педагог;
• представник служби у справах дітей;
• представник центру соціальних служб для сім'ї, дітей та молоді.

Варіативний склад комісії: батьки, сторони булінгу та інші представники суб'єктів реагування (органи місцевого самоврядування, засновник закладу освіти або уповноважений ним орган та територіальні органи національної поліції).""",
            "subsections": {
                "meeting_process": {
                    "title": "Як відбувається засідання комісії",
                    "content": """<b>Як відбувається засідання комісії:</b>

1. Секретар має повідомити всім членам, заявнику та іншим зацікавленим особам про порядок денний засідання, дату, час і місце проведення, надати або надіслати необхідні матеріали. Це все має відбуватися не пізніше 18-ї години за день до засідання комісії. Тобто, якщо засідання заплановано на вівторок, то не пізніше, ніж о 18-й годині понеділка мають бути поінформовані всі члени комісії.

2. Щоби засідання вважалося правомірним, повинні бути <b>⅔</b> її членів. Рішення комісія ухвалює більшістю голосів через відкрите голосування. У випадку, якщо голоси розділилися навпіл, останнім голосом є голос директора, оскільки він є головою комісії.

3. Протягом засідання секретар комісії веде протокол. Є форма цього протоколу, згідно з <a href="https://zakon.rada.gov.ua/laws/show/z0111-20#Text">додатком до наказу</a>.

4. У протоколі зазначається, які рішення ухвалює комісія, визначено потреби сторін булінгу в соціальних та психолого-педагогічних послугах, перераховано їх. А також – які мають бути вжиті інші заходи для усунення причин булінгу, рекомендації для педпрацівників, батьків або інших законних представників неповнолітньої особи.

5. Керівник закладу освіти наказом має оформити протокол засідання комісії.

Діяльність комісії не закінчується на тому, щоби визначити, що робити. Після вжитих заходів вона має далі збиратися на заплановані засідання і моніторити ефективність заходів виховного впливу, визначати, чи треба їх коригувати."""
                }
            }
        },
        "situations": {
            "title": "ПРИКЛАДИ СИТУАЦІЙ",
            "content": """<b>ПРИКЛАДИ СИТУАЦІЙ</b>

Оберіть ситуацію для ознайомлення:""",
            "examples": {
                "situation1": {
                    "title": "Ситуація 1",
                    "content": """<b>Ситуація 1</b>

<i>"Протягом 5 років мою доньку та інших дітей класу тероризують кілька однокласників. Батьки неодноразово проводили збори, на яких писали заяви директорці з проханням розібратись. Директорка заяви приймала, а допомоги жодної. У нас все добре, говорила вона. Тільки за цей рік донька отримала два синці на обличчі та неодноразово чула погрози".</i>

<b>Що було правильно:</b> Відповідно до алгоритму, правильно було те, що батьки звернулися до директора, що була написана заява. Заклад освіти правильно зробив, що її зареєстрував.

<b>Що було не правильно:</b> жодних дій далі не вживалось.

Анна Овдієнко додає: "Часто кажуть, що це була гра, одноразова ситуація, конфлікт, і його вже залагоджено. З цього звернення ми бачимо, що говориться про кілька випадків нанесення шкоди, цькування. Тобто, є систематичність. Систематичність – важлива ознака булінгу, яка відрізняє булінг від одноразового конфлікту"."""
                },
                "situation2": {
                    "title": "Ситуація 2",
                    "content": """<b>Ситуація 2</b>

<i>Людина звернулась зі скаргою на урядову гарячу лінію за номером 1545 про булінг та мобінг у закладі: "Обіцяли протягом 5 днів створити комісію для перевірки. Не припиняється систематичне цькування. Почалися перевірки педагогів, які підтримують жертву".</i>

<b>Що було неправильно:</b>

1. Комісію обіцяли створити протягом 5 днів, хоча вона має бути вже створена. Коли відбувається булінг, комісія скликається, а не створюється.

2. Комісія має бути скликана не протягом 5-ти, а протягом 3-х робочих днів."""
                },
                "situation3": {
                    "title": "Ситуація 3",
                    "content": """<b>Ситуація 3</b>

<i>"На уроці учень А вдарив учня Б, унаслідок чого учень Б отримав закриту черепно-мозкову травму та струс головного мозку. Після цього учень Б намагався звернутися по допомогу до директорки, але та до дитини не вийшла. Потім учень Б піднімався сходами, де сталася друга сутичка. Учень Б самостійно звернувся до медичної сестри, яка зателефонувала батькам через те, що виявила симптоми струсу.

Батьки не мали змоги забрати учня й попросили викликати швидку допомогу. Директорка забороняла викликати швидку. Після заяви батьків про булінг було скликано комісію з розгляду випадків булінгу. За результатами засідання, було складено акт про нещасний випадок, де заперечували факти вчинення насильства. Учень А під час роботи комісії та після розгляду продовжував погрожувати учню Б та його сестрі".</i>

<b>Що було неправильно:</b>

1. Директорка не мала права не реагувати. Учень може звернутись навіть усно. Вона мала прийняти заяву та викликати швидку допомогу.

2. Учителька була свідком. Вона мала втрутитися й потім повідомити про випадок.

3. "Ми не можемо це визнати булінгом або нещасним випадком. Комісія не є судом. Шкільна комісія мала залагодити ситуацію, розробити рекомендації. Усе це називається булінгом, проте законодавчо термін "булінг" та адміністративну відповідальність визначає лише суд", – каже Анна Овдієнко.

Повноваження шкільної комісії – це дізнатись причини ситуації, визначити, що робити, моніторити ефективність вжитих дій."""
                }
            }
        },
        "difficulties": {
            "title": "ТРУДНОЩІ, ЯКІ МОЖУТЬ ВИНИКНУТИ",
            "content": """<b>ТРУДНОЩІ, ЯКІ МОЖУТЬ ВИНИКНУТИ</b>

<b>1. Оціночне ставлення до булера, жертви та свідків.</b>
"З одного боку, оцінки спрощують наше життя. Але з іншого – створюють фільтр, через який ми дивимось на ситуацію. У розгляді булінгу такий фільтр стає перешкодою для того, щоб об'єктивно сприймати інформацію.

Це збільшує можливість того, що будуть пропущені якісь деталі. Або ж можна своєю поведінкою поглибити ситуацію. Якщо булеру одразу висловити несхвалення поведінкою, спробувати його покарати, назвати булером та тиснути на нього, то імовірніше, цей ярлик буде на дитині й вона далі діятиме так. Краще чинити безоціночно і ставити уточнювальні запитання, щоб учні самі оцінювали свою поведінку", – пояснює Анна Овдієнко.

<b>2. Спокуса вершити правосуддя</b>
"Це про те, що педагогічні працівники виходять із більш владної позиції до учнів. Проте ви не суддя, щоби чітко сказати: ти – маєш рацію, ти – винний, тебе покарано, тебе заохочено. Ваше завдання – не дати оцінку, а створити безпечну платформу для висловлення, щоб учні могли самі оцінити свою поведінку", – каже пані Анна.

<b>3. Особливе (позитивне) ставлення до будь-якої зі сторін.</b>
Важливо уникати особливого ставлення до будь-якої зі сторін. Це може призвести до упередженості в розгляді випадку та прийнятті рішень."""
        }
    }
},


# ТЕЛЕФОНИ ДОВІРИ
    "calling": {
    "title": "📞 ТЕЛЕФОНИ ДОВІРИ 📞",
    "content": """<b>Телефони гарячих ліній:</b>

- Національна дитяча «гаряча лінія»:
  ‣ <b>0 800 500 225</b>
  ‣ <b>116 111</b>

- Кол-центри Міністерства соціальної політики:
  -- з питань протидії торгівлі людьми: <b>1578</b>
  -- з питань протидії насильству: <b>1588</b>

- Національна безкоштовна гаряча лінія з протидії торгівлі людьми
  ‣ <b>0 800 505 501</b>
  ‣ <b>527</b>

- Урядова гаряча лінія з попередження домашнього насильства:
  ‣ <b>1547</b>

- Гаряча телефонна лінія щодо булінгу:
  ‣ <b>116 000</b>

- Гаряча лінія з протидії насильству
  ‣ <b>0 800 500 335</b>
  ‣ <b>116 123</b>

- Гаряча лінія Уповноваженого ВРУ з прав людини
  ‣ <b>0 800 501 720</b>

- Уповноважений Президента України з прав дитини
  ‣ <b>044 255 76 75</b>"""
},


# НОРМАТИВНА БАЗА
"normative": {
        "title": "📚 НОРМАТИВНА БАЗА 📚",
        "content": """<b>Офіційні документи МОН щодо булінгу</b>:

<a href="https://zakon.rada.gov.ua/laws/show/z0111-20">Наказ МОН України від 28.12.2019 №1646</a> "Деякі питання реагування на випадки булінгу (цькування) та застосування заходів виховного впливу в закладах освіти"

<a href="https://zakon.rada.gov.ua/laws/show/z0111-20#n16">📑 ПОРЯДОК реагування на випадки булінгу (цькування)</a>

<a href="https://zakon.rada.gov.ua/laws/show/z0111-20#Text">📑 ПОРЯДОК застосування заходів виховного впливу</a>

<a href="https://zakon.rada.gov.ua/laws/file/text/79/f492944n184.doc">📑 ПРОТОКОЛ засідання комісії з розгляду випадків булінгу (цькування)</a>

<a href="https://nadvirna-lyceum.com/wp-content/uploads/2020/09/1_11-881-1.pdf">Лист МОН України від 29.01.2019 №1/11-881</a> "Рекомендації для закладів освіти щодо застосування норм Закону України «Про внесення змін до деяких законодавчих актів України щодо протидії булінгу (цькуванню)»"

<a href="https://drive.google.com/file/d/1nTDyYVLH7KHAyJYV-rbSa_NZ_ZrEBDxA/view">Лист МОН України від 14.08.2020 №1/9-436</a> "Про створення безпечного освітнього середовища в закладі освіти та попередження протидії булінгу (цькуванню)"

<a href="https://mon.gov.ua/static-objects/mon/uploads/public/661/68c/749/66168c749e942831464207.pdf">Наказ МОН України від 26.02.2020 №293</a> "Про затвердження плану заходів, спрямованих на запобігання та протидію булінгу (цькуванню) в закладах освіти"

<a href="https://rada.info/upload/users_files/24016046/8e78a0ee3a33da80fe57cf0e3792ecca.doc">Лист МОН України від 20.03.2020 №6/480-20</a> "Про план заходів, спрямованих на запобігання та протидію булінгу (цькуванню) в закладах освіти"""

},


# ПОСІБНИКИ
"manuals_categories": {
    "title": "📖 ПОСІБНИКИ 📖",
    "content": "Оберіть категорію посібників:",
    "categories": {
        "unicef": {
            "title": "Поради від UNICEF",
            "description": "Практичні посібники від UNICEF для батьків і педагогів з протидії булінгу та підтримки дітей",
            "materials": {
                "parents_prevention": {
                    "title": "Як батькам і школі запобігти булінгу",
                    "description": """<b>Як батькам і школі запобігти булінгу</b>

<i>Автор: UNICEF Україна</i>

Посібник розкриває практичні підходи до запобігання булінгу через співпрацю батьків і школи. Містить рекомендації щодо розпізнавання булінгу на ранніх стадіях та ефективної протидії.

Основні теми:
- Розпізнавання ознак булінгу
- Профілактичні заходи в школі
- Стратегії для батьків
- Формування безпечного середовища для дітей

Рекомендовано для батьків та педагогів.""",
                    "pdf_url": "https://drive.google.com/file/d/1AjAdZIZVQxhamk7WUw01a0EeUIRYQ-VB/view?usp=drive_link"
                },
                "victim_support": {
                    "title": "Як допомогти дитині, яка стала жертвою булінгу",
                    "description": """<b>Як допомогти дитині, яка стала жертвою булінгу</b>

<i>Автор: UNICEF Україна</i>

Посібник містить рекомендації щодо підтримки дитини, яка зазнала цькування. Описано психологічні аспекти травми від булінгу та шляхи допомоги дитині.

Основні теми:
- Психологічні наслідки булінгу
- Комунікація з дитиною
- Взаємодія зі школою
- Відновлення самооцінки та емоційного благополуччя

Рекомендовано для батьків, психологів та педагогів.""",
                    "pdf_url": "https://drive.google.com/file/d/1g77Ow2KJ_Cr0TWdnInSDU-43GDKhOcMB/view?usp=drive_link"
                },
                "cyberbullying_victim": {
                    "title": "Як допомогти дитині, яка стала жертвою кібербулінгу",
                    "description": """<b>Як допомогти дитині, яка стала жертвою кібербулінгу</b>

<i>Автор: UNICEF Україна</i>

Посібник присвячений особливостям підтримки дітей, які стикнулися з цькуванням в онлайн-просторі. Розглядаються особливості кібербулінгу та його наслідки.

Основні теми:
- Особливості кібербулінгу
- Безпека в цифровому середовищі
- Емоційна підтримка
- Технічні аспекти захисту в інтернеті

Рекомендовано для батьків та підлітків.""",
                    "pdf_url": "https://drive.google.com/file/d/13lMZYQyxeHiRp0Zr-efgOm3Qzvp8P0tQ/view?usp=drive_link"
                },
                "bully_child": {
                    "title": "Що робити, якщо ваша дитина – агресор",
                    "description": """<b>Що робити, якщо ваша дитина – агресор</b>

<i>Автор: UNICEF Україна</i>

Посібник для батьків, чиї діти проявляють агресивну поведінку щодо інших. Розглядаються причини булерської поведінки та способи її корекції.

Основні теми:
- Розпізнавання ознак булерської поведінки
- Розуміння причин агресії
- Стратегії комунікації з дитиною
- Корекція поведінки та цінностей

Рекомендовано для батьків та педагогів.""",
                    "pdf_url": "https://drive.google.com/file/d/1AZxJOQY5IqmQJJb_zspiHy_hFMSRUBKK/view?usp=drive_link"
                }
            }
        },
        "education_system": {
            "title": "Системні посібники для закладів освіти",
            "description": "Методичні матеріали для системної організації роботи з протидії булінгу в закладах освіти",
            "materials": {
                "prevention_in_education": {
                    "title": "Запобігання та протидія проявам насильства",
                    "description": """<b>Запобігання та протидія проявам насильства: діяльність закладів освіти</b>

<i>Автори: Андрєєнкова В.Л., Байдик В.В., Войцях Т.В., Калашник О.А.</i>

Навчально-методичний посібник для працівників закладів освіти. Містить рекомендації щодо побудови системи протидії насильству в освітньому середовищі.

Основні теми:
- Форми насильства в освітньому середовищі
- Організація системної протидії
- Нормативна база
- Практичні заходи профілактики

Рекомендовано для адміністрації закладів освіти та шкільних психологів.""",
                    "pdf_url": "https://drive.google.com/file/d/1aIGa_dLNptQe-LwxU7_OVcTeybsEoQcc/view?usp=drive_link"
                },
                "safe_educational_code": {
                    "title": "Кодекс безпечного освітнього середовища",
                    "description": """<b>Кодекс безпечного освітнього середовища: методичний посібник</b>

<i>Автори: Цюман Т.П., Бойчук Н.І.</i>

Посібник з розробки та впровадження кодексу безпечного освітнього середовища. Детально описано процес створення документа та механізми його імплементації.

Основні теми:
- Принципи безпечного середовища
- Етапи розробки Кодексу
- Впровадження та моніторинг
- Залучення всіх учасників освітнього процесу

Рекомендовано для керівників закладів освіти.""",
                    "pdf_url": "https://drive.google.com/file/d/1BvPMnzKU37ULPwBq_jfC5Eq63QWLA8L1/view?usp=drive_link"
                },
                "bullying_systematic": {
                    "title": "Протидія булінгу в закладі освіти: системний підхід",
                    "description": """<b>Протидія булінгу в закладі освіти: системний підхід</b>

<i>Автори: Сидорук І.І., Петрук Л.А., Андрєєнкова В.Л.</i>

Методичний посібник з організації комплексної роботи щодо протидії булінгу. Представлено системний підхід до вирішення проблеми в межах навчального закладу.

Основні теми:
- Діагностика проявів булінгу
- Розробка антибулінгової політики закладу
- Протоколи реагування на випадки
- Профілактичні програми та заходи

Рекомендовано для адміністрації шкіл та шкільних психологів.""",
                    "pdf_url": "https://drive.google.com/file/d/1CBsWlpEm5Brc6JRViWs2RK4D-ouLR21m/view?usp=drive_link"
                },
                "say_no_bullying": {
                    "title": "Скажемо булінгу ні!",
                    "description": """<b>«Скажемо булінгу ні!»: методичний посібник</b>

<i>Автори: Черепаха К.В., Говорун Т.В., Васильєва О.М.</i>

Комплексний посібник з протидії булінгу для всіх учасників освітнього процесу. Містить теоретичний матеріал та практичні рекомендації.

Основні теми:
- Види та ознаки булінгу
- Профілактика цькування
- Алгоритми реагування
- Практичні вправи та тренінги

Рекомендовано для педагогів, психологів та батьків.""",
                    "pdf_url": "https://drive.google.com/file/d/1VT0Vl3VJBtIcYrBhig30Qi6S9IJViiCr/view?usp=drive_link"
                }
            }
        },
        "mediation": {
            "title": "Вирішення конфліктів та медіація",
            "description": "Матеріали з організації медіації та мирного вирішення конфліктів у закладах освіти",
            "materials": {
                "conflict_resolution": {
                    "title": "Вирішення конфліктів мирним шляхом. Базові навички медіації",
                    "description": """<b>Комплект освітніх програм «Вирішення конфліктів мирним шляхом. Базові навички медіації»</b>

<i>Автори: Андрєєнкова В.Л., Левченко К.Б., Матвійчук М.М.</i>

Освітні програми з розвитку навичок медіації та мирного вирішення конфліктів. Містить теоретичні матеріали та практичні вправи для проведення занять.

Основні теми:
- Основи медіації
- Комунікативні навички
- Етапи вирішення конфліктів
- Практичні вправи та сценарії тренінгів

Рекомендовано для педагогів, психологів та учнів-медіаторів.""",
                    "pdf_url": "https://drive.google.com/file/d/1_cPADXNDtSrSYRd_phNKwJzwG0HDclo3/view?usp=drive_link"
                },
                "reconciliation_services": {
                    "title": "Створення системи служб порозуміння",
                    "description": """<b>Створення системи служб порозуміння для впровадження медіації за принципом «рівний-рівному/рівна-рівній»</b>

<i>Автори: Андрєєнкова В.Л., Войцях Т.В., Дацко О.В., Лунченко Н.В.</i>

Навчально-методичний посібник з організації служб порозуміння в закладах освіти. Детально описано створення та функціонування медіаційних служб.

Основні теми:
- Концепція «рівний-рівному»
- Організаційні аспекти створення служб
- Підготовка медіаторів
- Супровід діяльності служб порозуміння

Рекомендовано для координаторів шкільних служб порозуміння.""",
                    "pdf_url": "https://drive.google.com/file/d/1BQQv4M7TRozZi6o-G0wvFpdMFr6clmXI/view?usp=drive_link"
                }
            }
        },
        "general_info": {
            "title": "Загальні інформаційні матеріали",
            "description": "Інформаційно-просвітницькі матеріали про булінг та шляхи його подолання",
            "materials": {
                "about_bullying": {
                    "title": "Про булінг (цькування) та як його подолати",
                    "description": """<b>Про булінг (цькування) та як його подолати. Дітям, молоді та дорослим про важливе</b>

<i>Автори: Сідєльнік Л.Л., Сушик Н.С., Мостовська А.В.</i>

Інформаційно-просвітницький посібник з основами розуміння явища булінгу. Надає базові знання про цькування та способи протидії.

Основні теми:
- Що таке булінг і чому він виникає
- Ролі учасників булінгу
- Психологічні наслідки
- Практичні поради для всіх вікових груп

Рекомендовано для широкого кола читачів.""",
                    "pdf_url": "https://drive.google.com/file/d/1mkarHeagSijxJvUxI9LxRhG3nMnBxrcW/view?usp=drive_link"
                }
            }
        }
    }
},


# КІБЕРБУЛІНГ
    "lessons": {
        "title": "🎓 КІБЕРБУЛІНГ 🎓",
        "submenu": {
            "age_groups": "За віком",
            "duration": "За тривалістю",
            "target_group": "За цільовою групою"
        }
},


# КОРОБКА З МАТЕРІАЛАМИ
    "training": {
    "title": "📦 КОРОБКА З МАТЕРІАЛАМИ 📦",
    "submenu": {
        "exercises": {
            "title": "🎯 вправи"
        },
        "all_education": {
            "title": "🎓 анкети"
        },
        "educational_hours": {
            "title": "⏰ виховні години"
        },
        "info_materials": {
            "title": "📚 інформаційні матеріали"
        },
        "psychological_hours": {
            "title": "🧠 психологічні години"
        },
        "training_sessions": {
            "title": "✨ тренінги"
        },
        "quests": {
            "title": "🎲 квести"
        },
        "summaries": {
            "title": "📝 конспекти"
        },
        "situation_sets": {
            "title": "🎭 набори ситуацій"
        },
        "trainings": {
            "title": "👥 тренінги"
        }
    }
},

# КОРИСНЕ З ДІЇ
    "diia_edu": {
    "title": "📱 КОРИСНЕ з ДІЯ.ОСВІТА 📱",
    "content": "Оберіть курс:",
    "submenu": {
        
        "personal_safety": {
            "title": "Особиста безпека підлітків",
            "description": """<b>"Особиста безпека підлітків"</b>

<i>Експерти: <b>Саша Гонтар</b></i>

Булінг, кібербулінг, залякування, погрози, кіберпереслідування, насильство в житті та мережі — чому це все не ок і що із цим робити?

У серіалі «Особиста безпека підлітків» ми розглянемо ключові ризики, які можуть трапитися з підлітками в реальному житті та мережі, а також розповімо, які життєві навички можливо прокачати, щоб протидіяти їм.

Освітній серіал створено з ініціативи Мінцифри для платформи Дія.Освіта за підтримки благодійного фонду «Клуб Добродіїв» та міжнародної гуманітарної організації Plan International.

Серіал про те, як захистити себе від ризиків у житті та мережі й прокачати життєві навички для протидії викликам.""",
            "url": "https://osvita.diia.gov.ua/courses/teenagers-personal-safety"
        },
        
        "school_no_bullying_teacher": {
            "title": "Школа без цькувань. Учителю",
            "description": """<b>"Школа без цькувань. Учителю"</b>

<i>Експерти: <b>Настя Мельниченко, Юлія Завгородня</b></i>

Цькування серед дітей — проблема як вчителів, так і батьків. Цей освітній серіал дасть вам дієві поради та методи, як боротися з булінгом, в тому числі в роботі з дітьми з емоційно-поведінковими особливостями.

Програма розроблена і для батьків, і для вчителів, щоб наочно пояснити, як говорити на цю тему з молодшими, як протидіяти цькуванню і, зрештою, як зробити так, щоб проблема булінгу лишилася в минулому.

Курс розроблено ГО «Студена» за ініціативи Міністерства цифрової трансформації України для платформи Дія.Освіта, за підтримки Міністерства науки та освіти України та проєкту «Дружній простір».

Серіал про те, як запобігти цькуванню: поради та стратегії для вчителів.""",
            "url": "https://osvita.diia.gov.ua/courses/skola-bez-ckuvan-castina-1-ucitelu"
        },
        
        "school_no_bullying_parents": {
            "title": "Школа без цькувань. Батькам",
            "description": """<b>"Школа без цькувань. Батькам"</b>

<i>Експерти: <b>Настя Мельниченко, Юлія Завгородня</b></i>

Цькування — спільна проблема вчителів, батьків та дітей. Цей освітній серіал дасть вам дієві поради та методи, як боротися з булінгом, в тому числі в роботі з дітьми з емоційно-поведінковими особливостями.

Програма розроблена і для батьків, і для вчителів, щоб наочно пояснити, як говорити на цю тему з молодшими, як протидіяти цькуванню і, зрештою, як зробити так, щоб проблема булінгу лишилася в минулому.

Курс розроблено ГО «Студена» за ініціативи Міністерства цифрової трансформації України для платформи Дія.Освіта, за підтримки Міністерства науки та освіти України та проєкту «Дружній простір».

Сераіал про те, як запобігти цькуванню: поради та стратегії для батьків.""",
            "url": "https://osvita.diia.gov.ua/courses/skola-bez-ckuvan-castina-2-batkam"
        },
        
        "cyberbullying": {
            "title": "Про кібербулінг для підлітків",
            "description": """<b>"Про кібербулінг для підлітків"</b>

<i>Експерти: <b>Анна Трінчер, Настя Каменських</b></i>

У справжній дружбі немає місця приниженням та неповазі, особливо онлайн. Якщо тебе образив коментар, повідомлення чи будь-що інше в мережі — це може бути кібербулінг. Не терпи це, це не окей.

Щоб не помилитися, переглянь освітній серіал. Тут можна зрозуміти, як виглядає кібербулінг, які його причини та потенційні наслідки, та як припинити булінг в інтернеті.

Якщо від цькувань в інтернеті страждають твої друзі — окрема серія буде присвячена тому, як їм допомогти. Не дозволяй кривдникам тебе образити! Проєкт Міністерства цифрової трансформації України за підтримки ЮНІСЕФ в Україні.

Серіал про те, як протистояти буллінгу в інтернеті.""",
            "url": "https://osvita.diia.gov.ua/courses/cyberbullying"
        }
    }
},

# ГО ТРИКУТНИК
    "triangle": {
    "title": "🔺 ГО «ТРИКУТНИК» 🔺",
    "content": """ <b>"Трикутник" - платформа співдії освіти, культури та правозахисту.</b>

Контакти:
- <a href="tel:+380990889198">0990889198</a>
- trykutnyk.fest@gmail.com

Адреса:
- вул. Братів Білоусів 11, приміщення 12, Коломия, Україна""",
    
    "links": {
        "telegram": "https://t.me/ngo_trykutnyk",
        "facebook": "https://www.facebook.com/trykutnyk",
        "instagram": "https://www.instagram.com/triangle_ngo",
        "vulyk": "https://www.instagram.com/vulykzmistiv",
        "youth_space": "https://www.instagram.com/molod.prostir.klm"
    }
}
    
}

# Структура для підменю тренінгів
TRAINING_SUBMENUS = {
    "submenu_type": {
        "title": "Категорії матеріалів",
        "options": {
            "exercises": "📍 вправи",
            "all_education": "📍 анкети",
            "educational_hours": "📍 виховні години",
            "info_materials": "📍 інформаційні матеріали",
            "psychological_hours": "📍 психологічні години",
            "training_sessions": "📍 тренінги",
            "quests": "📍 квести",
            "summaries": "📍 конспекти",
            "situation_sets": "📍 набори ситуацій",
            "trainings": "📍 тренінги"
        }
    }
}

# Структура для підменю занять
LESSONS_SUBMENUS = {
    "age_groups": {
        "title": "Заняття за віком",
        "options": {
            "primary": "Початкова школа",
            "middle": "Середня школа",
            "high": "Старша школа"
        }
    },
    "duration": {
        "title": "Заняття за тривалістю",
        "options": {
            "short": "15-30 хвилин",
            "medium": "30-45 хвилин",
            "long": "45-60 хвилин"
        }
    },
    "target_group": {
        "title": "За цільовою групою",
        "options": {
            "students": "Для учнів",
            "teachers": "Для вчителів",
            "parents": "Для батьків"
        }
    }
}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Показує головне меню"""
    keyboard = [
        [InlineKeyboardButton(MENU_DATA["what_to_do"]["title"], callback_data="what_to_do")],
        [InlineKeyboardButton(MENU_DATA["calling"]["title"], callback_data="calling")],
        [InlineKeyboardButton(MENU_DATA["normative"]["title"], callback_data="normative")],
        [InlineKeyboardButton(MENU_DATA["manuals_categories"]["title"], callback_data="manuals_categories")],
        [InlineKeyboardButton(MENU_DATA["lessons"]["title"], callback_data="lessons")],
        [InlineKeyboardButton(MENU_DATA["training"]["title"], callback_data="training")],
        [InlineKeyboardButton(MENU_DATA["diia_edu"]["title"], callback_data="diia_edu")],
        [InlineKeyboardButton(MENU_DATA["triangle"]["title"], callback_data="triangle")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text(
        "Привіт! Я твій бот-помічник у питаннях булінгу. Тут Ти зможеш знайти все необхідне. Обери розділ:",
        reply_markup=reply_markup,
        parse_mode='HTML'
    )

async def handle_button(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    
    # Обробка розділу "ЩО РОБИТИ ЯКЩО"
    if query.data == "what_to_do":
        return await show_algorithm_menu(update, context)
        
    # Обробка вибору розділу алгоритму
    if query.data.startswith("algorithm_section_"):
        section_key = query.data.replace("algorithm_section_", "")
        return await show_algorithm_section(update, context, section_key)
        
    # Обробка вибору кроку в розділі "ПЕРШІ КРОКИ"
    if query.data.startswith("algorithm_step_"):
        step_key = query.data.replace("algorithm_step_", "")
        return await show_algorithm_step(update, context, step_key)
        
    # Обробка вибору ситуації в розділі "ПРИКЛАДИ СИТУАЦІЙ"
    if query.data.startswith("algorithm_situation_"):
        situation_key = query.data.replace("algorithm_situation_", "")
        return await show_algorithm_situation(update, context, situation_key)
        
    # Обробка вибору підрозділу в розділі "КОМІСІЯ І ЗАСІДАННЯ"
    if query.data.startswith("algorithm_committee_subsection_"):
        subsection_key = query.data.replace("algorithm_committee_subsection_", "")
        return await show_committee_subsection(update, context, subsection_key)

    # Обробка розділу ПОСІБНИКИ
    if query.data == "manuals_categories":
        return await show_manuals_categories(update, context)

    # Обробка вибору конкретної категорії
    if query.data.startswith("manuals_category_"):
        category_key = query.data.replace("manuals_category_", "")
        return await show_category_manuals(update, context, category_key)

    # Обробка вибору конкретного посібника
    if query.data.startswith("manual_"):
        print(f"Обробляю callback для посібника: {query.data}")
    
    # Перевіряємо всі можливі категорії
    found = False
    for category_key in MENU_DATA["manuals_categories"]["categories"].keys():
        category_prefix = f"manual_{category_key}_"
        if query.data.startswith(category_prefix):
            # Витягуємо ключ посібника - це все, що після префіксу категорії
            manual_key = query.data[len(category_prefix):]
            print(f"Знайдено: категорія={category_key}, посібник={manual_key}")
            found = True
            return await show_manual_details(update, context, category_key, manual_key)
    
    if not found:
        print(f"Не вдалося знайти відповідну категорію для {query.data}")
        await query.answer("Помилка: не вдалося знайти посібник")

    # Інші обробники
    if query.data == "diia_edu":
        return await show_diia_edu_menu(update, context)
        
    # Обробка вибору конкретного курсу
    if query.data.startswith("diia_edu_"):
        course_key = query.data.replace("diia_edu_", "")
        course = MENU_DATA["diia_edu"]["submenu"].get(course_key)
        
        if course:
            keyboard = [
                [InlineKeyboardButton("📱 Перейти до курсу", url=course["url"])],
                [InlineKeyboardButton("◀️ Назад до списку курсів", callback_data="diia_edu")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            
            await query.edit_message_text(
                text=course["description"],
                reply_markup=reply_markup,
                parse_mode='HTML',
                disable_web_page_preview=True
            )
            return

    if query.data == "triangle":
        keyboard = [
            [
                InlineKeyboardButton("📱 Telegram", url=MENU_DATA["triangle"]["links"]["telegram"]),
                InlineKeyboardButton("📘 Facebook", url=MENU_DATA["triangle"]["links"]["facebook"]),
                InlineKeyboardButton("📸 Instagram", url=MENU_DATA["triangle"]["links"]["instagram"])
            ],
            [
                InlineKeyboardButton("🎯 Вулик Змістів", url=MENU_DATA["triangle"]["links"]["vulyk"]),
                InlineKeyboardButton("🌟 Молодіжний простір Коломиї", url=MENU_DATA["triangle"]["links"]["youth_space"])
            ],
            [InlineKeyboardButton("◀️ Назад до меню", callback_data="main_menu")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        full_text = f"""{MENU_DATA["triangle"]["content"]}

<b>Приєднуйтеся до нашої спільноти або до спільнот наших ініціатив:</b>"""
        
        try:
            await query.edit_message_text(
                text=full_text,
                reply_markup=reply_markup,
                parse_mode='HTML',
                disable_web_page_preview=True
            )
        except Exception as e:
            await query.message.reply_text(
                text=full_text,
                reply_markup=reply_markup,
                parse_mode='HTML',
                disable_web_page_preview=True
            )
        return
        
    if query.data == "main_menu":
        return await show_main_menu(update, context)
    
    if query.data == "lessons":
        return await show_lessons_menu(update, context)
    
    if query.data == "training":
        return await show_training_menu(update, context)
    
    if query.data in LESSONS_SUBMENUS:
        return await show_submenu(update, context, query.data)
    
    if query.data in TRAINING_SUBMENUS["submenu_type"]["options"]:
        return await show_training_submenu(update, context, query.data)
    
    # Обробка вибору конкретної ролі
    if query.data == "what_to_do":
        return await show_what_to_do_menu(update, context)
    
    if query.data.startswith("what_to_do_"):
        role_key = query.data.replace("what_to_do_", "")
        role = MENU_DATA["what_to_do"]["submenu"].get(role_key)
        
        if role:
            keyboard = [
                [InlineKeyboardButton("◀️ Назад до вибору ролі", callback_data="what_to_do")]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            
            await query.edit_message_text(
                text=role["description"],
                reply_markup=reply_markup,
                parse_mode='HTML',
                disable_web_page_preview=True
            )
            return
    
    # Показуємо інформацію з основного меню
    menu_item = MENU_DATA.get(query.data)
    if menu_item:
        keyboard = [[InlineKeyboardButton("◀️ Назад до меню", callback_data="main_menu")]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await query.edit_message_text(
            text=menu_item.get("content", "Інформація відсутня"),
            reply_markup=reply_markup,
            parse_mode='HTML',
            disable_web_page_preview=True
        )



# Додайте ці нові функції після існуючих функцій у вашому коді

async def show_algorithm_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Показує меню алгоритму дій при підозрі булінгу"""
    query = update.callback_query
    algorithm = MENU_DATA["what_to_do"]["submenu"]["algorithm"]
    keyboard = []
    
    # Додаємо кнопки для кожного розділу алгоритму
    for key, section in algorithm["subsections"].items():
        keyboard.append([InlineKeyboardButton(section["title"], callback_data=f"algorithm_section_{key}")])
    
    # Додаємо кнопку повернення до вибору ролі
    keyboard.append([InlineKeyboardButton("◀️ Назад до вибору ролі", callback_data="what_to_do")])
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        text=algorithm["description"],
        reply_markup=reply_markup,
        parse_mode='HTML',
        disable_web_page_preview=True
    )

async def show_algorithm_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Показує меню алгоритму дій при підозрі булінгу"""
    query = update.callback_query
    data = MENU_DATA["what_to_do"]
    keyboard = []
    
    # Додаємо кнопки для кожного розділу алгоритму
    for key, section in data["sections"].items():
        keyboard.append([InlineKeyboardButton(section["title"], callback_data=f"algorithm_section_{key}")])
    
    # Додаємо кнопку повернення до головного меню
    keyboard.append([InlineKeyboardButton("◀️ Назад до меню", callback_data="main_menu")])
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        text=data["content"],
        reply_markup=reply_markup,
        parse_mode='HTML',
        disable_web_page_preview=True
    )

# Функція відображення розділу алгоритму
async def show_algorithm_section(update: Update, context: ContextTypes.DEFAULT_TYPE, section_key: str):
    """Показує вміст обраного розділу алгоритму"""
    query = update.callback_query
    section = MENU_DATA["what_to_do"]["sections"].get(section_key)
    
    if not section:
        await query.answer("Розділ не знайдено")
        return
    
    keyboard = []
    
    # Якщо це розділ "ПЕРШІ КРОКИ", показуємо кнопки для кожного кроку в одному рядку, тільки з емодзі
    if section_key == "first_steps" and "steps" in section:
        step_buttons = []
        # Словник відповідності емодзі цифр
        number_emojis = {
            "step1": "1️⃣",
            "step2": "2️⃣",
            "step3": "3️⃣"
        }
        
        for step_key, step in section["steps"].items():
            # Використовуємо тільки емодзі без текстових підписів
            button_text = number_emojis.get(step_key, "")
            step_buttons.append(InlineKeyboardButton(button_text, callback_data=f"algorithm_step_{step_key}"))
        
        # Розміщуємо всі кнопки в одному рядку
        keyboard.append(step_buttons)
    
    # Якщо це розділ "ПРИКЛАДИ СИТУАЦІЙ", показуємо кнопки для кожної ситуації в одному рядку, тільки з емодзі
    elif section_key == "situations" and "examples" in section:
        situation_buttons = []
        # Словник відповідності емодзі цифр для ситуацій
        number_emojis = {
            "situation1": "1️⃣",
            "situation2": "2️⃣",
            "situation3": "3️⃣"
        }
        
        for situation_key, situation in section["examples"].items():
            # Використовуємо тільки емодзі без текстових підписів
            button_text = number_emojis.get(situation_key, "")
            situation_buttons.append(InlineKeyboardButton(button_text, callback_data=f"algorithm_situation_{situation_key}"))
        
        # Розміщуємо всі кнопки в одному рядку
        keyboard.append(situation_buttons)
    
    # Якщо це розділ "КОМІСІЯ І ЗАСІДАННЯ", показуємо кнопки для підрозділів
    elif section_key == "committee" and "subsections" in section:
        for subsection_key, subsection in section["subsections"].items():
            keyboard.append([InlineKeyboardButton(subsection["title"], callback_data=f"algorithm_committee_subsection_{subsection_key}")])
    
    # Додаємо кнопку повернення до меню алгоритму
    keyboard.append([InlineKeyboardButton("◀️ Назад до алгоритму", callback_data="what_to_do")])
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    # Оновлюємо вміст розділів з додатковим ввідним текстом
    content_text = section["content"]
    
    if section_key == "first_steps":
        content_text = """<b>ПЕРШІ КРОКИ</b>

У випадках підозри чи виявлення булінгу важливо діяти швидко та послідовно. Своєчасне реагування допомагає захистити постраждалу дитину та запобігти подальшому розвитку конфлікту.

Нижче наведено покроковий алгоритм дій, розроблений згідно з офіційними рекомендаціями МОН України. Дотримання цих кроків допоможе забезпечити ефективне реагування на ситуацію булінгу в закладі освіти.

Оберіть конкретний крок для отримання детальної інформації:"""
    
    elif section_key == "situations":
        content_text = """<b>ПРИКЛАДИ СИТУАЦІЙ</b>

Для кращого розуміння практичного застосування алгоритму дій при булінгу пропонуємо розглянути реальні ситуації, які виникають у закладах освіти. 

У цих прикладах розглянуто типові помилки в реагуванні та наведено правильні підходи до вирішення проблеми. Аналіз таких ситуацій допоможе вам уникнути поширених помилок і діяти ефективно при виявленні випадків булінгу.

Оберіть ситуацію для ознайомлення:"""
    
    await query.edit_message_text(
        text=content_text,
        reply_markup=reply_markup,
        parse_mode='HTML',
        disable_web_page_preview=True
    )


# Функція відображення кроку
async def show_algorithm_step(update: Update, context: ContextTypes.DEFAULT_TYPE, step_key: str):
    """Показує вміст обраного кроку з розділу 'ПЕРШІ КРОКИ'"""
    query = update.callback_query
    
    # Отримуємо інформацію про крок
    step = MENU_DATA["what_to_do"]["sections"]["first_steps"]["steps"].get(step_key)
    
    if not step:
        await query.answer("Крок не знайдено")
        return
    
    # Створюємо навігаційні кнопки в залежності від поточного кроку
    keyboard = []
    
    if step_key == "step1":
        # Для першого кроку показуємо тільки "Наступний крок"
        keyboard.append([
            InlineKeyboardButton("Наступний крок ▶️", callback_data="algorithm_step_step2")
        ])
    elif step_key == "step2":
        # Для другого кроку показуємо "Попередній крок" та "Наступний крок"
        keyboard.append([
            InlineKeyboardButton("◀️ Попередній крок", callback_data="algorithm_step_step1"),
            InlineKeyboardButton("Наступний крок ▶️", callback_data="algorithm_step_step3")
        ])
    elif step_key == "step3":
        # Для третього кроку показуємо тільки "Попередній крок"
        keyboard.append([
            InlineKeyboardButton("◀️ Попередній крок", callback_data="algorithm_step_step2")
        ])
    
    # Додаємо кнопку повернення до розділу "ПЕРШІ КРОКИ"
    keyboard.append([InlineKeyboardButton("◀️ Назад до ПЕРШИХ КРОКІВ", callback_data="algorithm_section_first_steps")])
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        text=step["content"],
        reply_markup=reply_markup,
        parse_mode='HTML',
        disable_web_page_preview=True
    )

# Функція відображення ситуації
async def show_algorithm_situation(update: Update, context: ContextTypes.DEFAULT_TYPE, situation_key: str):
    """Показує вміст обраної ситуації з розділу 'ПРИКЛАДИ СИТУАЦІЙ'"""
    query = update.callback_query
    
    # Отримуємо інформацію про ситуацію
    situation = MENU_DATA["what_to_do"]["sections"]["situations"]["examples"].get(situation_key)
    
    if not situation:
        await query.answer("Ситуація не знайдена")
        return
    
    # Додаємо кнопку повернення до розділу "ПРИКЛАДИ СИТУАЦІЙ"
    keyboard = [[InlineKeyboardButton("◀️ Назад до ПРИКЛАДІВ СИТУАЦІЙ", callback_data="algorithm_section_situations")]]
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        text=situation["content"],
        reply_markup=reply_markup,
        parse_mode='HTML',
        disable_web_page_preview=True
    )

# Функція відображення підрозділу комісії
async def show_committee_subsection(update: Update, context: ContextTypes.DEFAULT_TYPE, subsection_key: str):
    """Показує вміст обраного підрозділу з розділу 'КОМІСІЯ І ЗАСІДАННЯ'"""
    query = update.callback_query
    
    # Отримуємо інформацію про підрозділ
    subsection = MENU_DATA["what_to_do"]["sections"]["committee"]["subsections"].get(subsection_key)
    
    if not subsection:
        await query.answer("Підрозділ не знайдено")
        return
    
    # Додаємо кнопку повернення до розділу "КОМІСІЯ І ЗАСІДАННЯ"
    keyboard = [[InlineKeyboardButton("◀️ Назад до КОМІСІЇ І ЗАСІДАННЯ", callback_data="algorithm_section_committee")]]
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        text=subsection["content"],
        reply_markup=reply_markup,
        parse_mode='HTML',
        disable_web_page_preview=True
    )



async def show_manuals_categories(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Показує категорії посібників"""
    query = update.callback_query
    keyboard = []
    
    # Додайте вивід для перевірки
    print("Доступні категорії:", MENU_DATA["manuals_categories"]["categories"].keys())
    
    for key, category in MENU_DATA["manuals_categories"]["categories"].items():
        # Додайте вивід для перевірки
        print(f"Створюю кнопку для категорії: {key} - {category['title']}")
        print(f"Callback data: manuals_category_{key}")
        
        keyboard.append([InlineKeyboardButton(category["title"], callback_data=f"manuals_category_{key}")])
    
    # Додаємо кнопку повернення до головного меню
    keyboard.append([InlineKeyboardButton("◀️ Назад до меню", callback_data="main_menu")])
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        text=MENU_DATA["manuals_categories"]["content"],
        reply_markup=reply_markup,
        parse_mode='HTML',
        disable_web_page_preview=True
    )

async def show_category_manuals(update: Update, context: ContextTypes.DEFAULT_TYPE, category_key: str):
    """Показує посібники обраної категорії"""
    query = update.callback_query
    
    print(f"Показую категорію: {category_key}")
    
    category = MENU_DATA["manuals_categories"]["categories"].get(category_key)
    if not category:
        print(f"Категорія не знайдена: {category_key}")
        await query.answer("Категорія не знайдена")
        return
    
    keyboard = []
    
    # Додаємо кнопки для кожного посібника в категорії
    for key, manual in category["materials"].items():
        print(f"Додаю посібник: {key} - {manual['title']}")
        keyboard.append([InlineKeyboardButton(manual["title"], callback_data=f"manual_{category_key}_{key}")])
    
    # Додаємо кнопку повернення до категорій
    keyboard.append([InlineKeyboardButton("◀️ Назад до категорій", callback_data="manuals_categories")])
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        text=f"<b>{category['title']}</b>\n\n{category['description']}",
        reply_markup=reply_markup,
        parse_mode='HTML',
        disable_web_page_preview=True
    )

async def show_manual_details(update: Update, context: ContextTypes.DEFAULT_TYPE, category_key: str, manual_key: str):
    """Показує деталі конкретного посібника"""
    query = update.callback_query
    
    print(f"Показую деталі посібника: категорія={category_key}, посібник={manual_key}")
    
    try:
        manual = MENU_DATA["manuals_categories"]["categories"][category_key]["materials"][manual_key]
        
        keyboard = [
            [InlineKeyboardButton("📥 ПЕРЕГЛЯНУТИ PDF", url=manual["pdf_url"])],
            [InlineKeyboardButton("◀️ Назад до списку", callback_data=f"manuals_category_{category_key}")]
        ]
        
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await query.edit_message_text(
            text=manual["description"],
            reply_markup=reply_markup,
            parse_mode='HTML',
            disable_web_page_preview=True
        )
    except KeyError as e:
        # Додайте логування для відстеження помилки
        print(f"KeyError in show_manual_details: {e}")
        print(f"Category key: {category_key}, Manual key: {manual_key}")
        await query.answer(f"Посібник не знайдено. Помилка: {e}")

# Оновлена функція show_what_to_do_menu
async def show_what_to_do_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Показує меню вибору ролі та алгоритму дій"""
    query = update.callback_query
    keyboard = []
    
    # Додаємо кнопку для алгоритму дій першим пунктом
    algorithm = MENU_DATA["what_to_do"]["submenu"].get("algorithm")
    if algorithm:
        keyboard.append([InlineKeyboardButton(algorithm["title"], callback_data="what_to_do_algorithm")])
    
    # Додаємо кнопки для кожної ролі
    for key, item in MENU_DATA["what_to_do"]["submenu"].items():
        # Пропускаємо алгоритм, оскільки ми вже додали його вище
        if key != "algorithm":
            keyboard.append([InlineKeyboardButton(item["title"], callback_data=f"what_to_do_{key}")])
    
    # Додаємо кнопку повернення до головного меню
    keyboard.append([InlineKeyboardButton("◀️ Назад до меню", callback_data="main_menu")])
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        text=MENU_DATA["what_to_do"]["content"],
        reply_markup=reply_markup,
        parse_mode='HTML',
        disable_web_page_preview=True
    )


async def show_training_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Показує меню матеріалів"""
    query = update.callback_query
    keyboard = []
    
    # Створюємо список всіх пунктів меню
    menu_items = list(MENU_DATA["training"]["submenu"].items())
    
    # Розбиваємо на пари (по 2 кнопки в ряд)
    for i in range(0, len(menu_items), 2):
        row = []
        # Додаємо першу кнопку в ряд
        row.append(InlineKeyboardButton(
            menu_items[i][1]["title"], 
            callback_data=f"training_{menu_items[i][0]}"
        ))
        # Додаємо другу кнопку, якщо вона є
        if i + 1 < len(menu_items):
            row.append(InlineKeyboardButton(
                menu_items[i + 1][1]["title"], 
                callback_data=f"training_{menu_items[i + 1][0]}"
            ))
        keyboard.append(row)
    
    # Додаємо кнопку повернення до головного меню
    keyboard.append([InlineKeyboardButton("◀️ Назад до меню", callback_data="main_menu")])
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        text="Оберіть розділ матеріалів:",
        reply_markup=reply_markup,
        disable_web_page_preview=True
    )

async def show_training_submenu(update: Update, context: ContextTypes.DEFAULT_TYPE, selected_category: str):
    """Показує підменю для обраної категорії тренінгів"""
    query = update.callback_query
    category_text = TRAINING_SUBMENUS["submenu_type"]["options"].get(selected_category, "Категорія")
    
    keyboard = [
        [InlineKeyboardButton("◀️ Назад до тренінгів", callback_data="training")]
    ]
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        text=f"Ви обрали категорію: {category_text}\n\nОписання та матеріали готуються...",
        reply_markup=reply_markup,
        disable_web_page_preview=True
    )

async def show_main_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Показує головне меню"""
    query = update.callback_query
    keyboard = [
        [InlineKeyboardButton(MENU_DATA["what_to_do"]["title"], callback_data="what_to_do")],
        [InlineKeyboardButton(MENU_DATA["calling"]["title"], callback_data="calling")],
        [InlineKeyboardButton(MENU_DATA["normative"]["title"], callback_data="normative")],
        [InlineKeyboardButton(MENU_DATA["manuals_categories"]["title"], callback_data="manuals_categories")],
        [InlineKeyboardButton(MENU_DATA["lessons"]["title"], callback_data="lessons")],
        [InlineKeyboardButton(MENU_DATA["training"]["title"], callback_data="training")],
        [InlineKeyboardButton(MENU_DATA["diia_edu"]["title"], callback_data="diia_edu")],
        [InlineKeyboardButton(MENU_DATA["triangle"]["title"], callback_data="triangle")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        text="Оберіть розділ:",
        reply_markup=reply_markup,
        disable_web_page_preview=True
    )


async def show_lessons_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Показує меню занять"""
    query = update.callback_query
    keyboard = [
        [InlineKeyboardButton("📚 За віком", callback_data="age_groups")],
        [InlineKeyboardButton("⏱ За тривалістю", callback_data="duration")],
        [InlineKeyboardButton("👥 За цільовою групою", callback_data="target_group")],
        [InlineKeyboardButton("◀️ Назад до меню", callback_data="main_menu")]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        text="Оберіть категорію занять:",
        reply_markup=reply_markup,
        disable_web_page_preview=True
    )

async def show_submenu(update: Update, context: ContextTypes.DEFAULT_TYPE, submenu_type: str):
    """Показує підменю для обраної категорії занять"""
    query = update.callback_query
    submenu = LESSONS_SUBMENUS[submenu_type]
    
    keyboard = [
        [InlineKeyboardButton(text, callback_data=f"{submenu_type}_{key}")]
        for key, text in submenu["options"].items()
    ]
    keyboard.append([InlineKeyboardButton("◀️ Назад", callback_data="lessons")])
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    await query.edit_message_text(
        text=f"{submenu['title']}:",
        reply_markup=reply_markup,
        disable_web_page_preview=True
    )

async def clear_chat(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Очищає чат"""
    await update.message.reply_text("Чат очищено!")

async def restart_bot(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Перезапускає бота"""
    await update.message.reply_text("Бота перезапущено!")
    await start(update, context)

async def stop_bot(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Зупиняє бота"""
    await update.message.reply_text("Бота зупинено. Щоб почати знову, напишіть /start")

async def show_diia_edu_menu(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """Показує підменю розділу ДІЯ.ОСВІТА"""
    query = update.callback_query
    keyboard = []
    
    # Додаємо кнопки для кожного курсу
    for key, item in MENU_DATA["diia_edu"]["submenu"].items():
        keyboard.append([InlineKeyboardButton(item["title"], callback_data=f"diia_edu_{key}")])
    
    # Додаємо кнопку повернення до головного меню
    keyboard.append([InlineKeyboardButton("◀️ Назад до меню", callback_data="main_menu")])
    
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await query.edit_message_text(
        text="Оберіть курс на платформі ДІЯ.ОСВІТА:",
        reply_markup=reply_markup,
        parse_mode='HTML',
        disable_web_page_preview=True
    )

def run_bot():
    """Запускає бота"""
    max_retries = 3
    retry_count = 0
    
    while retry_count < max_retries:
        try:
            application = Application.builder().token(TOKEN).build()
            
            application.add_handler(CommandHandler("start", start))
            application.add_handler(CallbackQueryHandler(handle_button))
            application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, start))
            
            print("Бот запускається...")
            application.run_polling()
            break
            
        except Conflict:
            retry_count += 1
            print(f"Спроба {retry_count} з {max_retries}: Бот вже запущений. Очікування...")
            time.sleep(10)  # Чекаємо 10 секунд перед повторною спробою
            
    if retry_count == max_retries:
        print("Не вдалося запустити бота після кількох спроб. Переконайтеся, що немає інших запущених екземплярів.")

    application = Application.builder().token(TOKEN).build()
    
    # Додаємо обробники команд
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("clear", clear_chat))
    application.add_handler(CommandHandler("restart", restart_bot))
    application.add_handler(CommandHandler("stop", stop_bot))
    application.add_handler(CallbackQueryHandler(handle_button))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, start))
    
    # Запускаємо бота
    application.run_polling()

if __name__ == "__main__":
    run_bot()